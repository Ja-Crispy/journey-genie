import { jsPDF } from 'jspdf';
import autoTable from 'jspdf-autotable';

interface Itinerary {
  day: number;
  activities: string[];
}

// No need for declaration - using the proper import style instead

export const generateItineraryPDF = (
  itinerary: Itinerary[],
  destination: string,
  startDate?: Date,
  endDate?: Date,
  budget?: number
) => {
  // Create new PDF document
  const doc = new jsPDF();
  
  // Add title
  doc.setFontSize(24);
  doc.setTextColor(23, 155, 125); // Teal color
  doc.text(`Trip to ${destination}`, 105, 20, { align: 'center' });
  
  // Add metadata
  doc.setFontSize(12);
  doc.setTextColor(100);
  
  let metadataY = 35;
  
  // Add dates if available
  if (startDate && endDate) {
    const formatDate = (date: Date) => date.toLocaleDateString('en-US', { 
      year: 'numeric', 
      month: 'short', 
      day: 'numeric' 
    });
    
    doc.text(`Date: ${formatDate(startDate)} to ${formatDate(endDate)}`, 20, metadataY);
    metadataY += 10;
  }
  
  // Add budget if available
  if (budget) {
    doc.text(`Budget: $${budget}`, 20, metadataY);
    metadataY += 10;
  }
  
  // Add JourneyGenie footer
  doc.text('Generated by JourneyGenie', 105, metadataY, { align: 'center' });
  metadataY += 15;

  // Create table data
  const tableData = itinerary.map(day => {
    return [
      `Day ${day.day}`,
      day.activities.join('\n\n')
    ];
  });
  
  // Use autoTable as a function import rather than a method
  autoTable(doc, {
    startY: metadataY,
    head: [['Day', 'Activities']],
    body: tableData,
    headStyles: { 
      fillColor: [23, 155, 125],
      textColor: [255, 255, 255],
      fontStyle: 'bold'
    },
    columnStyles: {
      0: { cellWidth: 30 },
      1: { cellWidth: 'auto' }
    },
    styles: {
      overflow: 'linebreak',
      cellPadding: 5,
    },
    alternateRowStyles: {
      fillColor: [240, 240, 240]
    }
  });
  
  // Generate download
  doc.save(`${destination.toLowerCase().replace(/\s+/g, '-')}_itinerary.pdf`);
};
